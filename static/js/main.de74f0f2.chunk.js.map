{"version":3,"sources":["slice/restaurantSlice.js","Components/FormWrapper.js","Components/SearchInput.js","Components/Button.js","Components/SearchByCity.js","Components/SearchByName.js","Components/SortByPrice.js","Components/RestaurantItem.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["restaurantSlice","createSlice","name","initialState","data","reducers","ADD_RESULTS","state","action","payload","CLEAR_RESULTS","actions","selectRestaurant","restaurants","StyledForm","styled","display","flexDirection","alignItems","marginBottom","FormWrapper","children","onSubmit","InputContainer","StyledLabel","textAlign","SearchInput","value","onChange","label","htmlFor","type","id","StyledButton","paddingLeft","paddingRight","width","Button","SearchByCity","useState","setValue","e","target","SelectContainer","SortByPrice","style","Container","border","borderRadius","padding","listStyle","boxShadow","H3","margin","Text","Bold","fontWeight","RestaurantItem","restaurant","address","area","price","as","AppContainer","maxWidth","SearchContainer","LoadingMessage","App","dispatch","useDispatch","useSelector","city","setCity","setName","priceSort","setPriceSort","isSearching","setIsSearching","isCitySearched","setIsCitySearched","filteredResults","setFilteredResults","useEffect","fetch","then","res","json","fetchRestaurants","regex","RegExp","filtered","filter","test","preventDefault","SearchByName","length","role","sort","a","b","map","key","showResults","configureStore","reducer","restaurantReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de74f0f2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const restaurantSlice = createSlice({\r\n  name: 'restaurants',\r\n  initialState: {\r\n    data: [],\r\n  },\r\n  reducers: {\r\n    ADD_RESULTS: (state, action) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    CLEAR_RESULTS: (state) => {\r\n      state.data = []\r\n    }\r\n  }\r\n});\r\n\r\nexport const { ADD_RESULTS, CLEAR_RESULTS } = restaurantSlice.actions;\r\n\r\nexport const selectRestaurant = state => state.restaurants.data\r\n\r\nexport default restaurantSlice.reducer;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledForm = styled('form')(\r\n  {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: '28px'\r\n  }\r\n)\r\n\r\nconst FormWrapper = ({ children, onSubmit }) => (\r\n  <StyledForm onSubmit={onSubmit}>\r\n    { children }\r\n  </StyledForm>\r\n)\r\n\r\nexport default FormWrapper","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst InputContainer = styled('div')(\r\n  {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '8px'\r\n  }\r\n)\r\n\r\nconst StyledLabel = styled('label')(\r\n  {\r\n    textAlign: 'center',\r\n    marginBottom: '4px'\r\n  }\r\n)\r\n\r\nconst SearchInput = ({ value, onChange, label, name }) => (\r\n  <InputContainer>\r\n    <StyledLabel htmlFor={name}> \r\n      {label}\r\n    </StyledLabel>\r\n    <input type=\"text\" id={name} value={value} onChange={onChange}/>\r\n  </InputContainer>\r\n)\r\n\r\nSearchInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SearchInput;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledButton = styled('button')(\r\n  {\r\n    paddingLeft: '12px',\r\n    paddingRight: '12px',\r\n    width: '75px',\r\n  }\r\n)\r\n\r\nconst Button = ({ children }) => (\r\n  <StyledButton type=\"submit\">\r\n    {children}\r\n  </StyledButton>\r\n)\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport FormWrapper from './FormWrapper'\r\nimport SearchInput from './SearchInput'\r\nimport Button from './Button'\r\n\r\nconst SearchByCity = ({ onSubmit }) => {\r\n  const [ value, setValue ] = useState('')\r\n  return (\r\n    <FormWrapper name=\"city search\" onSubmit={(e) => onSubmit(e, value)}>\r\n      <SearchInput\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        name=\"city\"\r\n        label=\"Search by City\"\r\n      />\r\n      <Button>Search</Button>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\nSearchByCity.propTypes = {\r\n  onSubmit: PropTypes.func\r\n}\r\n\r\nexport default SearchByCity;","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport FormWrapper from './FormWrapper'\r\nimport SearchInput from './SearchInput'\r\nimport Button from './Button'\r\n\r\nconst SearchByCity = ({ onSubmit }) => {\r\n  const [ value, setValue ] = useState('')\r\n  return (\r\n    <FormWrapper name=\"restaurant filter\" onSubmit={(e) => onSubmit(e, value)}>\r\n      <SearchInput\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        name=\"restaurant\"\r\n        label=\"Filter by Restaurant\"\r\n      />\r\n      <Button>Filter</Button>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\nSearchByCity.propTypes = {\r\n  onSubmit: PropTypes.func\r\n}\r\n\r\nexport default SearchByCity;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst SelectContainer = styled('div')(\r\n  {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '8px'\r\n  }\r\n)\r\n\r\nconst StyledLabel = styled('label')(\r\n  {\r\n    textAlign: 'center',\r\n    marginBottom: '4px'\r\n  }\r\n)\r\n\r\nconst SortByPrice = ({ onChange }) => (\r\n  <SelectContainer>\r\n    <StyledLabel htmlFor=\"price-sort\">Sort By Price</StyledLabel>\r\n    <select name=\"price\" id=\"price-sort\" onChange={onChange} style={{width: '169px'}}>\r\n      <option value=\"\">Sort Price</option>\r\n      <option value=\"ascending\">Ascending</option>\r\n      <option value=\"descending\">Descending</option>\r\n    </select>\r\n  </SelectContainer>\r\n)\r\n\r\nexport default SortByPrice\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled('div')(\r\n  {\r\n    border: '1px solid black',\r\n    borderRadius: '5px',\r\n    marginBottom: '32px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '16px',\r\n    listStyle: 'none',\r\n    boxShadow: '10px 10px 5px #0000008a',\r\n  }\r\n)\r\n\r\nconst H3 = styled('h3')(\r\n  {\r\n    margin: 0,\r\n  }\r\n)\r\n\r\nconst Text = styled('p')(\r\n  {\r\n    margin: 0\r\n  }\r\n)\r\n\r\nconst Bold = styled('span')(\r\n  {\r\n    fontWeight: 700\r\n  }\r\n)\r\n\r\nconst RestaurantItem = ({ restaurant }) => {\r\n  const { name, address, area, price } = restaurant\r\n  return (\r\n    <Container as=\"li\">\r\n      <H3>{name}</H3>\r\n      <Text><Bold>Address: </Bold>{address}</Text>\r\n      <Text><Bold>Area: </Bold>{area}</Text>\r\n      <Text><Bold>Price: </Bold>{price}</Text>\r\n    </Container>\r\n  )\r\n}\r\nRestaurantItem.propTypes = {\r\n  restaurant: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    address: PropTypes.string,\r\n    area: PropTypes.string,\r\n    price: PropTypes.number,\r\n    id: PropTypes.number,\r\n  })\r\n}\r\n\r\nexport default RestaurantItem;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ADD_RESULTS, CLEAR_RESULTS, selectRestaurant } from './slice/restaurantSlice'\r\nimport SearchByCity from './Components/SearchByCity'\r\nimport SearchByName from './Components/SearchByName'\r\nimport SortByPrice from './Components/SortByPrice'\r\nimport RestaurantItem from './Components/RestaurantItem'\r\n\r\nconst AppContainer = styled('div')(\r\n  {\r\n    maxWidth: '1200px',\r\n    paddingLeft: '12px',\r\n    paddingRight: '12px',\r\n    margin: '0 auto'\r\n  }\r\n)\r\n\r\nconst SearchContainer = styled('div')(\r\n  {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: '32px'\r\n  }\r\n)\r\n\r\nconst LoadingMessage = styled('p')(\r\n  {\r\n    textAlign: 'center'\r\n  }\r\n)\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const restaurants = useSelector(selectRestaurant)\r\n  \r\n  const [ city, setCity ] = useState('')\r\n  const [ name, setName ] = useState('')\r\n  const [ priceSort, setPriceSort ] = useState('')\r\n  \r\n  const [ isSearching, setIsSearching ] = useState(false)\r\n  const [ isCitySearched, setIsCitySearched ] = useState(false) \r\n  \r\n  const [ filteredResults, setFilteredResults ] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurants = (city) => {\r\n      if (!city){\r\n        return null\r\n      }\r\n    \r\n      fetch(`https://opentable.herokuapp.com/api/restaurants?city=${city}&per_page=100`)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          setIsSearching(false)\r\n          setIsCitySearched(true)\r\n          dispatch(ADD_RESULTS(data.restaurants))\r\n        })\r\n    }\r\n    \r\n    dispatch(CLEAR_RESULTS())\r\n    fetchRestaurants(city)\r\n  },[city, dispatch])\r\n\r\n  useEffect(() => {\r\n    const regex = RegExp(name, 'gi',)\r\n    const filtered = restaurants.filter(res => regex.test(res.name))\r\n    setFilteredResults(filtered)\r\n  }, [name, restaurants])\r\n\r\n  const showResults = () => {\r\n      // make a shallow copy of restaurants since it is read only and the sort method mutates\r\n      let data = name ? filteredResults : [...restaurants]\r\n\r\n      if (priceSort === 'ascending'){\r\n        data = data.sort((a, b) => a.price - b.price)\r\n      } else if (priceSort === 'descending'){\r\n        data = data.sort((a, b) => b.price - a.price)\r\n      }\r\n\r\n      return (\r\n        <ul style={{paddingLeft: 0}}>\r\n          { \r\n            data.map((res) => <RestaurantItem key={res.id} restaurant={res}/>)\r\n          }\r\n        </ul>\r\n      )\r\n  }\r\n\r\n  const showLoading = () => {\r\n    if (isSearching){\r\n      return <LoadingMessage>Searching for restaurants in: {city}</LoadingMessage>\r\n    }\r\n\r\n    if (isCitySearched && !isSearching){\r\n      return <LoadingMessage>No results found for: {city}</LoadingMessage>\r\n    }\r\n  }\r\n\r\n  const handleCitySubmit = (e, city) => {\r\n    e.preventDefault()\r\n    setCity(city)\r\n    setIsSearching(true)\r\n  }\r\n\r\n  const handleFilterSubmit = (e, name) => {\r\n    e.preventDefault()\r\n    if (!restaurants?.length){\r\n      return null\r\n    }\r\n    setName(name)\r\n  }\r\n\r\n  const handlePriceSort = (e) => {\r\n    setPriceSort(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <AppContainer>\r\n      <h1 style={{textAlign: 'center'}}>Deliver to Me!</h1>\r\n      <SearchContainer>\r\n        <SearchByCity onSubmit={handleCitySubmit} />\r\n        <SearchByName onSubmit={handleFilterSubmit}/>\r\n        <SortByPrice onChange={handlePriceSort}/>\r\n      </SearchContainer>\r\n      <div role=\"main\">\r\n        { restaurants?.length ? showResults() : showLoading()}\r\n      </div>\r\n    </AppContainer>\r\n  )\r\n}\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\nimport restaurantReducer from '../slice/restaurantSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    restaurants: restaurantReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}